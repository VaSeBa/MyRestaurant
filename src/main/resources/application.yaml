#  https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
spring:
  jpa:
    show-sql: true
    open-in-view: false
    defer-datasource-initialization: true
#    use if S-Boot version 5+
#    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    properties:
      #  http://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html#configurations
      hibernate:
        format_sql: true
        default_batch_fetch_size: 20
        # https://stackoverflow.com/questions/21257819/what-is-the-difference-between-hibernate-jdbc-fetch-size-and-hibernate-jdbc-batc
        jdbc.batch_size: 20
  datasource:
    # ImMemory
    url: jdbc:h2:mem:myrestaurent
    #    tcp: jdbc:h2:tcp://localhost:9092/mem:voting
    # Relative path from home
    #    url: jdbc:h2:~/voting
    #    tcp: jdbc:h2:tcp://localhost:9092/~/voting
    username: sa
    password:
  h2.console.enabled: true

  data.rest:
    #  https://docs.spring.io/spring-data/rest/docs/current/reference/html/#getting-started.basic-settings
    basePath: /api
    defaultPageSize: 20
    returnBodyOnCreate: true
    #    GET http://localhost:8080/api
    #    GET http://localhost:8080/api/users
    #    GET http://localhost:8080/api/users/1
    #    GET http://localhost:8080/api/users/search
    #    GET http://localhost:8080/api/users/search/by-email?email=User@gmail.com
    #    GET http://localhost:8080/api/users/search/by-lastname?lastName=Admin
    #    GET http://localhost:8080/api/users/search/by-lastname?lastName=last

    # Jackson Serialization Issue Resolver
    #  jackson:
    #    visibility.field: any
    #    visibility.getter: none
    #    visibility.setter: none
    #    visibility.is-getter: none

    #  https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#security-properties
#  security:
#    user:
#      name: user
#      password: password
#      roles: USER

logging:
    level:
      root: WARN
      ru.javaops.bootjava: DEBUG
#      org.springframework.security.web.FilterChainProxy: DEBUG

server.servlet:
  encoding:
    charset: UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly
    enabled: true # Enable http encoding support
    force: true


#  curl -s http://localhost:8080/api/account --user user@gmail.com:password